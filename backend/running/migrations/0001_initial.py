# Generated by Django 5.0.2 on 2024-02-27 16:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('day_number', models.PositiveSmallIntegerField(db_comment='Уникальный номер дня в программе тренировок.', help_text='Номер дня.', primary_key=True, serialize=False, verbose_name='Номер дня')),
                ('motivation_phrase', models.CharField(db_comment='Мотивационная фраза на дне тренеровки.', help_text='Мотивационная фраза', max_length=150, verbose_name='Мотивационная фраза')),
                ('workout', models.JSONField(db_comment='Описанные этапы тренеровки', help_text='Описанные этапы тренеровки в json.', verbose_name='Этапы тренеровки')),
                ('workout_info', models.CharField(db_comment='Описание тренеровки дополнительно к этапам', help_text='Описание тренеровки.', max_length=100, verbose_name='Описание тренеровки')),
            ],
            options={
                'verbose_name': 'День',
                'verbose_name_plural': 'Дни',
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(db_comment='Название достижения.', help_text='Иконка, представляющая достижение.', upload_to='achievement_icons/', verbose_name='Иконка достижения')),
                ('title', models.CharField(db_comment='Название достижения.', help_text='Название достижения.', max_length=150, verbose_name='Название достижения')),
                ('description', models.TextField(db_comment='Описание достижения.', help_text='Описание достижения.', verbose_name='Описание достижения')),
                ('stars', models.PositiveSmallIntegerField(db_comment='Числовое представление уровня сложности достижения.', help_text='Уровень выполненного достижения.', verbose_name='Звездность')),
                ('reward_points', models.PositiveSmallIntegerField(db_comment='Количество заморозок за достижение.', default=1, help_text='Количество заморозок за достижение.', verbose_name='Заморозк')),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
                'ordering': ('title', 'stars'),
                'unique_together': {('title', 'stars')},
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_date', models.DateTimeField(db_comment='Дата, когда пользователь получил достижение.', help_text='Дата и время проведения тренировки.', verbose_name='Дата тренировки')),
                ('completed', models.BooleanField(db_comment='Флаг, указывающий, завершена ли тренировка или нет.', default=False, help_text='Показывает, завершена ли тренировка или нет.', verbose_name='Завершено')),
                ('route', models.TimeField(db_comment='Маршрут тренировки.', help_text='Маршрут тренировки.', verbose_name='Маршрут')),
                ('distance', models.PositiveSmallIntegerField(db_comment='Пройденная дистанция в метрах.', help_text='Пройденная дистанция в метрах.', verbose_name='Дистанция (в метрах)')),
                ('max_speed', models.PositiveSmallIntegerField(db_comment='Максимальная достигнутая скорость во время тренировки.', help_text='Максимальная достигнутая скорость во время тренировки.', verbose_name='Максимальная скорость')),
                ('avg_speed', models.PositiveSmallIntegerField(db_comment='Средняя скорость за всю тренировку.', help_text='Средняя скорость за всю тренировку.', verbose_name='Средняя скорость')),
                ('training_day', models.ForeignKey(db_comment='День, к которому относится тренировка.', help_text='День тренировки.', on_delete=django.db.models.deletion.CASCADE, to='running.day', verbose_name='День тренировки')),
            ],
            options={
                'verbose_name': 'Тренировка ',
                'verbose_name_plural': 'Тренировки',
                'ordering': ('training_date',),
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_date', models.DateTimeField(auto_now_add=True, db_comment='Дата, когда пользователь получил достижение.', help_text='Дата, когда пользователь получил достижение.', verbose_name='Дата получения достижения')),
                ('achievement_id', models.ForeignKey(db_comment='Достижение, полученное пользователем.', help_text='Достижение, полученное пользователем.', on_delete=django.db.models.deletion.CASCADE, to='running.achievement', verbose_name='Достижение')),
                ('user_id', models.ForeignKey(db_comment='Пользователь, который получил достижение.', help_text='Пользователь, который получил достижение.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Достижение пользователя',
                'verbose_name_plural': 'Достижения пользователей',
            },
        ),
    ]
