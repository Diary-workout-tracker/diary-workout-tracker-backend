openapi: 3.0.3
info:
  title: API сервиса 100 дней бега
  version: 1.0.0
  description: Live докумениация сервиса
paths:
  /api/v1/achievement/:
    get:
      operationId: api_v1_achievement_list
      description: Выводит список достижений
      summary: Список достижений
      tags:
      - Run
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Achievement'
          description: ''
  /api/v1/achievement/{id}/:
    get:
      operationId: api_v1_achievement_retrieve
      description: Получает информацию о достижение по его идентификатору
      summary: Получение достижения по идентификатору
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Достижение.
        required: true
      tags:
      - Run
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
          description: ''
  /api/v1/achievement/me/:
    get:
      operationId: api_v1_achievement_me_retrieve
      description: Получает информацию о достижениях авторизированного пользователя
      summary: Получение достижений авторизированного пользователя
      tags:
      - Run
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAchievement'
          description: ''
  /api/v1/health/:
    get:
      operationId: api_v1_health_retrieve
      description: Проверка работы АПИ
      summary: Проверка работы
      tags:
      - System
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                Health: OK
          description: ''
  /api/v1/me/:
    get:
      operationId: api_v1_me_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_me_destroy
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/resend_code/:
    post:
      operationId: api_v1_resend_code_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/token/refresh/:
    post:
      operationId: api_v1_token_refresh_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtain'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtain'
          description: ''
  /api/v1/training/:
    get:
      operationId: api_v1_training_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Training'
          description: ''
  /api/v1/user/:
    post:
      operationId: api_v1_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Achievement:
      type: object
      description: Сериализатор достижения.
      properties:
        id:
          type: integer
          readOnly: true
        icon:
          type: string
          format: uri
          title: Иконка достижения
          description: Иконка, представляющая достижение.
        title:
          type: string
          title: Название достижения
          description: Название достижения.
          maxLength: 100
        description:
          type: string
          title: Описание достижения
          description: Описание достижения.
        reward_points:
          type: integer
          maximum: 32767
          minimum: 0
          title: Заморозк
          description: Количество заморозок за достижение.
      required:
      - description
      - icon
      - id
      - title
    BlankEnum:
      enum:
      - ''
    CustomTokenObtain:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
        code:
          type: string
          writeOnly: true
          maxLength: 4
          minLength: 4
      required:
      - code
      - email
    GenderEnum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
    PatchedUser:
      type: object
      description: Сериализатор кастомного пользователя.
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        gender:
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        height_cm:
          type: integer
          nullable: true
        weight_kg:
          type: number
          format: double
          nullable: true
        last_completed_training_number:
          type: integer
          readOnly: true
        amount_of_skips:
          type: integer
          readOnly: true
        avatar:
          type: string
          format: uri
    Training:
      type: object
      description: Сериализатор тренировок.
      properties:
        day_number:
          type: integer
          maximum: 32767
          minimum: 0
          title: Номер дня
          description: Номер дня.
        workout:
          title: Этапы тренировки
          description: Описанные этапы тренировки в json.
        workout_info:
          type: string
          title: Описание тренировки
          description: Описание тренировки.
          maxLength: 100
        motivation_phrase:
          type: string
        completed:
          type: boolean
      required:
      - day_number
      - motivation_phrase
      - workout
      - workout_info
    User:
      type: object
      description: Сериализатор кастомного пользователя.
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        gender:
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        height_cm:
          type: integer
          nullable: true
        weight_kg:
          type: number
          format: double
          nullable: true
        last_completed_training_number:
          type: integer
          readOnly: true
        amount_of_skips:
          type: integer
          readOnly: true
        avatar:
          type: string
          format: uri
      required:
      - amount_of_skips
      - email
      - last_completed_training_number
    UserAchievement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        achievement_id:
          allOf:
          - $ref: '#/components/schemas/Achievement'
          readOnly: true
        achievement_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата получения достижения
          description: Дата, когда пользователь получил достижение.
      required:
      - achievement_date
      - achievement_id
      - id
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
